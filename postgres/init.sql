-- Create ecommerce db

CREATE DATABASE ecommerce;
CREATE USER test WITH PASSWORD 'test123';
GRANT CREATE, CONNECT ON DATABASE ecommerce TO test;
GRANT USAGE ON SCHEMA public TO test;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO test;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO test;

-- CREATE DATABASE ecommerce;
-- CREATE USER postgres WITH PASSWORD 'postgres';
--
-- \connect ecommerce;
--
-- CREATE TABLE roles
-- (
--     role_id   SERIAL PRIMARY KEY,
--     role_name VARCHAR(20) NOT NULL
-- );
--
-- CREATE TABLE users
-- (
--     user_id  SERIAL PRIMARY KEY,
--     username VARCHAR(20)  NOT NULL UNIQUE,
--     email    VARCHAR(50)  NOT NULL UNIQUE,
--     password VARCHAR(120) NOT NULL
-- );
--
-- create table user_role
-- (
--     user_id bigint  not null,
--     role_id integer not null,
--     primary key (user_id, role_id)
-- );
--
-- create table products
-- (
--     product_id    bigint       not null,
--     description   varchar(255) not null,
--     discount      float(53)    not null,
--     image         varchar(255),
--     price         float(53)    not null,
--     product_name  varchar(255) not null,
--     quantity      integer,
--     special_price float(53)    not null,
--     category_id   bigint,
--     seller_id     bigint,
--     primary key (product_id)
-- );
--
-- create table payments
-- (
--     payment_id          bigint generated by default as identity,
--     payment_method      varchar(255) not null,
--     pg_name             varchar(255),
--     pg_payment_id       varchar(255),
--     pg_response_message varchar(255),
--     pg_status           varchar(255),
--     primary key (payment_id)
-- );
-- create table orders
-- (
--     order_id     bigint generated by default as identity,
--     email        varchar(255) not null,
--     order_date   date,
--     order_status varchar(255),
--     total_amount float(53),
--     address_id   bigint,
--     payment_id   bigint,
--     primary key (order_id)
-- );
--
-- create table order_items
-- (
--     order_item_id         bigint generated by default as identity,
--     discount              float(53) not null,
--     ordered_product_price float(53) not null,
--     quantity              integer,
--     order_id              bigint,
--     product_id            bigint,
--     primary key (order_item_id)
-- );
--
-- create table categories
-- (
--     category_id   bigint generated by default as identity,
--     category_name varchar(255) not null,
--     primary key (category_id)
-- );
--
-- create table carts
-- (
--     cart_id     bigint generated by default as identity,
--     total_price float(53),
--     user_id     bigint,
--     primary key (cart_id)
-- );
--
-- create table cart_items
-- (
--     cart_item_id  bigint generated by default as identity,
--     discount      float(53) not null,
--     product_price float(53) not null,
--     quantity      integer,
--     cart_id       bigint,
--     product_id    bigint,
--     primary key (cart_item_id)
-- );
--
-- create table addresses
-- (
--     address_id    bigint generated by default as identity,
--     building_name varchar(255) not null,
--     city          varchar(255) not null,
--     country       varchar(255) not null,
--     pincode       varchar(255) not null,
--     state         varchar(255) not null,
--     street        varchar(255) not null,
--     user_id       bigint,
--     primary key (address_id)
-- );
--
-- GRANT ALL PRIVILEGES ON ALL TABLES in SCHEMA public TO postgres;
-- GRANT USAGE, SELECT ON SEQUENCE roles_role_id_seq TO postgres;
-- GRANT USAGE, SELECT ON SEQUENCE users_user_id_seq TO postgres;
-- ALTER TABLE users OWNER TO postgres;
-- ALTER TABLE addresses OWNER TO postgres;
-- ALTER TABLE cart_items OWNER TO postgres;
-- ALTER TABLE carts OWNER TO postgres;
-- ALTER TABLE categories OWNER TO postgres;
-- ALTER TABLE order_items OWNER TO postgres;
-- ALTER TABLE orders OWNER TO postgres;
-- ALTER TABLE payments OWNER TO postgres;
-- ALTER TABLE products OWNER TO postgres;
-- ALTER TABLE user_role OWNER TO postgres;
-- ALTER TABLE roles OWNER TO postgres;

